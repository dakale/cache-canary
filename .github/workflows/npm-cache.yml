name: npm-cache

on: push

env:
  VERSION_TO_TEST: v1
  LATEST_STABLE: v1 # For back compat scenario (i.e. save with LATEST_STABLE and restore with VERSION_TO_TEST)

jobs:
  upload-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: node-cache upload test (${{ matrix.os }})
    steps:
    - uses: actions/checkout@v1

    - uses: actions/cache@${{ env.VERSION_TO_TEST }}
      with:
        path: node/node_modules
        key: ${{ runner.os }}-node-test-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-node-test-${{ hashFiles('**/package-lock.json') }}
          ${{ runner.os }}-node-test
    - run: npm install
      working-directory: ./node
    - run: npm run build
      working-directory: ./node
    - run: npm test
      working-directory: ./node

  restore-test:
    needs: upload
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: node-cache restore test(${{ matrix.os }})
    steps:
    - uses: actions/checkout@v1

    - uses: actions/cache@${{ env.VERSION_TO_TEST }} # Always want to test restore with test version
      id: cache
      with:
        path: node/node_modules
        key: ${{ runner.os }}-node-test-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}

    - name: Fail if cache not found
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        echo "Cache not found, upload failed"
        exit 1
    - run: npm install
      working-directory: ./node
    - run: npm run build
      working-directory: ./node
    - run: npm test
      working-directory: ./node