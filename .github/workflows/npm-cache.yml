name: npm-cache

on: push

jobs:
  upload:
    runs-on: ${{ matrix.os }}
    services:
      squid:
        image: dakale/squid
        ports: ['3128:3128']
    env:
      http_proxy: localhost:3128
    strategy:
      matrix:
        os: [ubuntu-latest]
        cache: [test, stable]
    name: upload ${{ matrix.cache }} (${{ matrix.os }})
    steps:
    - run: |
        curl -v httpbin.org/uuid
        # sudo iptables -I OUTPUT -d localhost -p tcp --dport 3128 -j ACCEPT
        # sudo iptables -P OUTPUT DROP
        # echo "The next curl should fail"
        # http_proxy='' curl -v httpbin.org/uuid
    - uses: actions/checkout@v1
    - name: Upload Stable Cache
      uses: actions/cache@v1
      if: matrix.cache == 'stable'
      with:
        path: node/node_modules
        key: ${{ runner.os }}-node++-${{ matrix.cache }}-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-node++-${{ matrix.cache }}-${{ hashFiles('**/package-lock.json') }}
          ${{ runner.os }}-node++-${{ matrix.cache }}

    - name: Upload Test Cache
      uses: dakale/cache@release_http-client-port # Replace this version with version to test
      if: matrix.cache == 'test'
      with:
        path: node/node_modules
        key: ${{ runner.os }}-node++-${{ matrix.cache }}-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-node++-${{ matrix.cache }}-${{ hashFiles('**/package-lock.json') }}
          ${{ runner.os }}-node++-${{ matrix.cache }}
    - run: npm install
      working-directory: ./node
    - run: npm run build
      working-directory: ./node
    - run: npm test
      working-directory: ./node
    - run: | 
        docker logs ${{ job.services.squid.id }}
        docker exec ${{ job.services.squid.id }} cat /var/log/squid/access.log

  restore:
    needs: upload
    runs-on: ${{ matrix.os }}
    services:
      squid:
        image: dakale/squid
        ports: ['3128:3128']
    env:
      http_proxy: localhost:3128
    strategy:
      matrix:
        os: [ubuntu-latest]
        cache: [test, stable]
    name: restore ${{ matrix.cache }} (${{ matrix.os }})
    steps:
    - run: curl -v httpbin.org/uuid
    - uses: actions/checkout@v1
    - uses: dakale/cache@release_http-client-port # Always want to test restore with test version
      id: cache
      with:
        path: node/node_modules
        key: ${{ runner.os }}-node++-${{ matrix.cache }}-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}

    - name: Fail if cache not found
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        echo "Cache not found, upload failed"
        exit 1
    - run: npm install
      working-directory: ./node
    - run: npm run build
      working-directory: ./node
    - run: npm test
      working-directory: ./node
    - run: |
        docker logs ${{ job.services.squid.id }}
        docker exec ${{ job.services.squid.id }} cat /var/log/squid/access.log

